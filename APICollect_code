from datetime import datetime, timedelta
import requests
import csv

# Define the start and end dates
start_date = datetime(2024, 8, 11)
end_date = datetime(2024, 9, 11)
current_date = start_date
# List to hold the data
weather_data = []

# Loop through each day in the date range
while current_date < end_date:
    # Format the date for the API call
    date_str = current_date.strftime('%Y-%m-%d')
    
    # Make the API request (historical endpoint)
    try:
        response = requests.get(
            f'http://api.weatherapi.com/v1/history.json?key=d3b3f31a34614c6dacf24226241409&q=Ho Chi Minh&dt={date_str}'
        )
        rsp = response.json()
        
        # Extract relevant information from the day section
        day_data = rsp['forecast']['forecastday'][0]['day']
        location = rsp['location']

        # Now, attempt to extract cloud cover from the hourly data
        # Average cloud cover by iterating over the hourly data
        hourly_data = rsp['forecast']['forecastday'][0]['hour']
        cloud_cover = sum([hour['cloud'] for hour in hourly_data]) / len(hourly_data)  # Average cloud cover
        
        weather_data.append([
            date_str,
            location['name'],
            location['country'],
            location['localtime'],
            day_data['maxtemp_c'],
            day_data['mintemp_c'],
            day_data['avgtemp_c'],
            day_data['maxwind_mph'],
            day_data['totalprecip_mm'],
            day_data['uv'],
            day_data['condition']['text'],
            cloud_cover  
        ])
        
        # Print details
        print(f'Date: {date_str}, City: {location["name"]}, Country: {location["country"]}, Local Time: {location["localtime"]}')
    
    except Exception as e:
        print(f"Failed to fetch data for {date_str}: {e}")
    
    # Move to the next day
    current_date += timedelta(days=1)

# Define the CSV file name and header
csv_file = 'weather_data.csv'
header = [
    'Date', 'City', 'Country', 'Local Time', 'Max Temp (C)', 'Min Temp (C)', 'Avg Temp (C)', 
    'Max Wind (MPH)', 'Total Precipitation (MM)', 'UV Index', 'Condition', 'Average Cloud Cover (%)'
]

# Save the data to a CSV file
with open(csv_file, mode='w', newline='', encoding='utf-8') as file:
    writer = csv.writer(file)
    writer.writerow(header)  # Write the header row
    writer.writerows(weather_data)  # Write all collected data

print(f"Weather data saved to '{csv_file}'")